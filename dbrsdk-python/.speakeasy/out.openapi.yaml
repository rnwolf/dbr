openapi: "3.1.0"
info:
  title: "DBR Buffer Management System API"
  description: "API for managing Collections, Work Items, and Schedules within a Drum Buffer Rope (DBR) system"
  version: "1.0.0"
servers:
  - url: "http://127.0.0.1:8000"
    description: "Local server"
paths:
  "/api/v1/workitems":
    get:
      tags:
        - "Work Items"
      summary: "Get Work Items"
      description: "Get all work items with optional filtering"
      operationId: "get_work_items_api_v1_workitems_get"
      security:
        - HTTPBearer: []
      parameters:
        - name: "organization_id"
          in: "query"
          required: true
          schema:
            type: "string"
            description: "Organization ID to filter by"
            title: "Organization Id"
          description: "Organization ID to filter by"
        - name: "collection_id"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "Collection ID to filter by"
            title: "Collection Id"
          description: "Collection ID to filter by"
        - name: "status"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "array"
                items:
                  type: "string"
              - type: "null"
            description: "Status to filter by"
            title: "Status"
          description: "Status to filter by"
        - name: "priority"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "Priority to filter by"
            title: "Priority"
          description: "Priority to filter by"
        - name: "sort"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "Sort field"
            title: "Sort"
          description: "Sort field"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema:
                type: "array"
                items: {"$ref": "#/components/schemas/WorkItemResponse"}
                title: "Response Get Work Items Api V1 Workitems Get"
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimited'
      x-speakeasy-group: "workItems"
      x-speakeasy-name-override: "list"
    post:
      tags:
        - "Work Items"
      summary: "Create Work Item"
      description: "Create a new work item"
      operationId: "create_work_item_api_v1_workitems_post"
      security:
        - HTTPBearer: []
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/WorkItemCreate"}
      responses:
        "201":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/WorkItemResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimited'
      x-speakeasy-group: "workItems"
      x-speakeasy-name-override: "create"
  "/api/v1/workitems/{work_item_id}":
    get:
      tags:
        - "Work Items"
      summary: "Get Work Item"
      description: "Get a specific work item by ID"
      operationId: "get_work_item_api_v1_workitems__work_item_id__get"
      parameters:
        - name: "work_item_id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Work Item Id"
        - name: "organization_id"
          in: "query"
          required: true
          schema:
            type: "string"
            description: "Organization ID to scope the request"
            title: "Organization Id"
          description: "Organization ID to scope the request"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/WorkItemResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimited'
      x-speakeasy-group: "workItems"
      x-speakeasy-name-override: "get"
    put:
      tags:
        - "Work Items"
      summary: "Update Work Item"
      description: "Update a work item by ID"
      operationId: "update_work_item_api_v1_workitems__work_item_id__put"
      security:
        - HTTPBearer: []
      parameters:
        - name: "work_item_id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Work Item Id"
        - name: "organization_id"
          in: "query"
          required: true
          schema:
            type: "string"
            description: "Organization ID to scope the request"
            title: "Organization Id"
          description: "Organization ID to scope the request"
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/WorkItemUpdate"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/WorkItemResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimited'
      x-speakeasy-group: "workItems"
      x-speakeasy-name-override: "update"
    delete:
      tags:
        - "Work Items"
      summary: "Delete Work Item"
      description: "Delete a work item by ID"
      operationId: "delete_work_item_api_v1_workitems__work_item_id__delete"
      security:
        - HTTPBearer: []
      parameters:
        - name: "work_item_id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Work Item Id"
        - name: "organization_id"
          in: "query"
          required: true
          schema:
            type: "string"
            description: "Organization ID to scope the request"
            title: "Organization Id"
          description: "Organization ID to scope the request"
      responses:
        "204":
          description: "Successful Response"
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimited'
      x-speakeasy-group: "workItems"
      x-speakeasy-name-override: "delete"
  "/api/v1/workitems/{work_item_id}/tasks/{task_id}":
    put:
      tags:
        - "Work Items"
      summary: "Update Work Item Task"
      description: "Update a specific task within a work item"
      operationId: "update_work_item_task_api_v1_workitems__work_item_id__tasks__task_id__put"
      security:
        - HTTPBearer: []
      parameters:
        - name: "work_item_id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Work Item Id"
        - name: "task_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Task Id"
        - name: "organization_id"
          in: "query"
          required: true
          schema:
            type: "string"
            description: "Organization ID to scope the request"
            title: "Organization Id"
          description: "Organization ID to scope the request"
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/TaskUpdate"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/WorkItemResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimited'
      x-speakeasy-group: "workItems"
      x-speakeasy-name-override: "updateTask"
  "/api/v1/schedules":
    get:
      tags:
        - "Schedules"
      summary: "Get Schedules"
      description: "Get all schedules with optional filtering"
      operationId: "get_schedules_api_v1_schedules_get"
      parameters:
        - name: "organization_id"
          in: "query"
          required: true
          schema:
            type: "string"
            description: "Organization ID to filter by"
            title: "Organization Id"
          description: "Organization ID to filter by"
        - name: "board_config_id"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "Board configuration ID to filter by"
            title: "Board Config Id"
          description: "Board configuration ID to filter by"
        - name: "status"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "array"
                items:
                  type: "string"
              - type: "null"
            description: "Status to filter by"
            title: "Status"
          description: "Status to filter by"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema:
                type: "array"
                items: {"$ref": "#/components/schemas/ScheduleResponse"}
                title: "Response Get Schedules Api V1 Schedules Get"
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimited'
      x-speakeasy-name-override: "list"
    post:
      tags:
        - "Schedules"
      summary: "Create Schedule"
      description: "Create a new schedule"
      operationId: "create_schedule_api_v1_schedules_post"
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/ScheduleCreate"}
      responses:
        "201":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ScheduleResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimited'
      x-speakeasy-name-override: "create"
  "/api/v1/schedules/{schedule_id}":
    get:
      tags:
        - "Schedules"
      summary: "Get Schedule"
      description: "Get a specific schedule by ID"
      operationId: "get_schedule_api_v1_schedules__schedule_id__get"
      parameters:
        - name: "schedule_id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Schedule Id"
        - name: "organization_id"
          in: "query"
          required: true
          schema:
            type: "string"
            description: "Organization ID to scope the request"
            title: "Organization Id"
          description: "Organization ID to scope the request"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ScheduleResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimited'
      x-speakeasy-name-override: "get"
    put:
      tags:
        - "Schedules"
      summary: "Update Schedule"
      description: "Update a schedule by ID"
      operationId: "update_schedule_api_v1_schedules__schedule_id__put"
      parameters:
        - name: "schedule_id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Schedule Id"
        - name: "organization_id"
          in: "query"
          required: true
          schema:
            type: "string"
            description: "Organization ID to scope the request"
            title: "Organization Id"
          description: "Organization ID to scope the request"
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/ScheduleUpdate"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ScheduleResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimited'
      x-speakeasy-name-override: "update"
    delete:
      tags:
        - "Schedules"
      summary: "Delete Schedule"
      description: "Delete a schedule by ID"
      operationId: "delete_schedule_api_v1_schedules__schedule_id__delete"
      parameters:
        - name: "schedule_id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Schedule Id"
        - name: "organization_id"
          in: "query"
          required: true
          schema:
            type: "string"
            description: "Organization ID to scope the request"
            title: "Organization Id"
          description: "Organization ID to scope the request"
      responses:
        "204":
          description: "Successful Response"
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimited'
      x-speakeasy-name-override: "delete"
  "/api/v1/schedules/{schedule_id}/analytics":
    get:
      tags:
        - "Schedules"
      summary: "Get Schedule Analytics"
      description: "Get analytics for a specific schedule"
      operationId: "get_schedule_analytics_api_v1_schedules__schedule_id__analytics_get"
      parameters:
        - name: "schedule_id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Schedule Id"
        - name: "organization_id"
          in: "query"
          required: true
          schema:
            type: "string"
            description: "Organization ID to scope the request"
            title: "Organization Id"
          description: "Organization ID to scope the request"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ScheduleAnalytics"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimited'
      x-speakeasy-group: "schedules.analytics"
      x-speakeasy-name-override: "get"
  "/api/v1/schedules/board/{board_config_id}/analytics":
    get:
      tags:
        - "Schedules"
      summary: "Get Board Analytics"
      description: "Get analytics for all schedules on a specific board"
      operationId: "get_board_analytics_api_v1_schedules_board__board_config_id__analytics_get"
      parameters:
        - name: "board_config_id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Board Config Id"
        - name: "organization_id"
          in: "query"
          required: true
          schema:
            type: "string"
            description: "Organization ID to scope the request"
            title: "Organization Id"
          description: "Organization ID to scope the request"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/BoardAnalytics"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimited'
      x-speakeasy-name-override: "getBoardAnalytics"
  "/api/v1/system/advance_time_unit":
    post:
      tags:
        - "System"
      summary: "Advance Time Unit"
      description: "Advance all schedules one time unit left (Manual/Fast-Forward)\n\nThis operation simulates the passage of time, moving all active schedules \none time slot to the left on the DBR board. This can be triggered manually \n(e.g., \"Fast-Forward\" button) or automatically by the system."
      operationId: "advance_time_unit_api_v1_system_advance_time_unit_post"
      security:
        - HTTPBearer: []
      parameters:
        - name: "organization_id"
          in: "query"
          required: true
          schema:
            type: "string"
            description: "Organization ID to scope the request"
            title: "Organization Id"
          description: "Organization ID to scope the request"
        - name: "board_config_id"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "Optional board config ID to filter schedules"
            title: "Board Config Id"
          description: "Optional board config ID to filter schedules"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/AdvanceTimeResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimited'
      x-speakeasy-name-override: "advanceTimeUnit"
  "/api/v1/system/time":
    get:
      tags:
        - "System"
      summary: "Get Current Time"
      description: "Get the current system time"
      operationId: "get_current_time_api_v1_system_time_get"
      security:
        - HTTPBearer: []
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema:
                type: "object"
                additionalProperties: true
                title: "Response Get Current Time Api V1 System Time Get"
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimited'
      x-speakeasy-name-override: "getTime"
    post:
      tags:
        - "System"
      summary: "Set System Time"
      description: "Set the system time (for testing purposes)"
      operationId: "set_system_time_api_v1_system_time_post"
      security:
        - HTTPBearer: []
      parameters:
        - name: "time_iso"
          in: "query"
          required: true
          schema:
            type: "string"
            description: "ISO format datetime to set as system time"
            title: "Time Iso"
          description: "ISO format datetime to set as system time"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema:
                type: "object"
                additionalProperties: true
                title: "Response Set System Time Api V1 System Time Post"
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimited'
      x-speakeasy-name-override: "setTime"
  "/api/v1/auth/login":
    post:
      tags:
        - "Authentication"
      summary: "Login"
      description: "Authenticate user and return JWT token\n\nAccepts either username or email address as the username field."
      operationId: "login_api_v1_auth_login_post"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/LoginRequest"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/LoginResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimited'
      x-speakeasy-name-override: "login"
  "/api/v1/auth/me":
    get:
      tags:
        - "Authentication"
      summary: "Get Current User Info"
      description: "Get current user information"
      operationId: "get_current_user_info_api_v1_auth_me_get"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/UserInfo"}
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimited'
      security:
        - HTTPBearer: []
      x-speakeasy-name-override: "getCurrentUserInfo"
  "/api/v1/auth/logout":
    post:
      tags:
        - "Authentication"
      summary: "Logout"
      description: "Logout endpoint (JWT tokens are stateless, so this is mainly for client-side cleanup)"
      operationId: "logout_api_v1_auth_logout_post"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimited'
      security:
        - HTTPBearer: []
      x-speakeasy-name-override: "logout"
  "/":
    get:
      summary: "Read Root"
      operationId: "read_root__get"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimited'
      x-speakeasy-group: "root"
      x-speakeasy-name-override: "get"
  "/health":
    get:
      summary: "Health Check"
      description: "Health check endpoint for monitoring and frontend connectivity tests"
      operationId: "health_check_health_get"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/BadRequest'
        '429':
          $ref: '#/components/responses/RateLimited'
      x-speakeasy-group: health
      x-speakeasy-name-override: get
  "/api/v1/health":
    get:
      summary: "Api Health Check"
      description: "API-specific health check endpoint"
      operationId: "api_health_check_api_v1_health_get"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/BadRequest'
        '429':
          $ref: '#/components/responses/RateLimited'
      x-speakeasy-group: apiHealth
      x-speakeasy-name-override: get
components:
  schemas:
    "AdvanceTimeResponse":
      properties:
        "message":
          type: "string"
          title: "Message"
          description: "Success message"
        "advanced_schedules_count":
          type: "integer"
          title: "Advanced Schedules Count"
          description: "Number of schedules that were advanced"
      type: "object"
      required:
        - "message"
        - "advanced_schedules_count"
      title: "AdvanceTimeResponse"
      description: "Response model for advance_time_unit endpoint"
    "BoardAnalytics":
      properties:
        "total_schedules":
          type: "integer"
          title: "Total Schedules"
        "status_distribution":
          additionalProperties:
            type: "integer"
          type: "object"
          title: "Status Distribution"
        "zone_occupancy":
          additionalProperties:
            type: "integer"
          type: "object"
          title: "Zone Occupancy"
        "capacity_utilization":
          additionalProperties:
            type: "number"
          type: "object"
          title: "Capacity Utilization"
      type: "object"
      required:
        - "total_schedules"
        - "status_distribution"
        - "zone_occupancy"
        - "capacity_utilization"
      title: "BoardAnalytics"
    "HTTPValidationError":
      properties:
        "detail":
          items: {"$ref": "#/components/schemas/ValidationError"}
          type: "array"
          title: "Detail"
      type: "object"
      title: "HTTPValidationError"
    "LoginRequest":
      properties:
        "username":
          type: "string"
          title: "Username"
          description: "Username or email address"
        "password":
          type: "string"
          title: "Password"
          description: "User password"
      type: "object"
      required:
        - "username"
        - "password"
      title: "LoginRequest"
      description: "Login request model"
    "LoginResponse":
      properties:
        "access_token":
          type: "string"
          title: "Access Token"
          description: "JWT access token"
        "token_type":
          type: "string"
          title: "Token Type"
          description: "Token type"
          default: "bearer"
        "user":
          additionalProperties: true
          type: "object"
          title: "User"
          description: "User information"
      type: "object"
      required:
        - "access_token"
        - "user"
      title: "LoginResponse"
      description: "Login response model"
    "ScheduleAnalytics":
      properties:
        "work_item_count":
          type: "integer"
          title: "Work Item Count"
        "total_ccr_hours":
          type: "number"
          title: "Total Ccr Hours"
        "buffer_zone":
          type: "string"
          title: "Buffer Zone"
        "position_info":
          additionalProperties: true
          type: "object"
          title: "Position Info"
        "throughput_metrics":
          additionalProperties: true
          type: "object"
          title: "Throughput Metrics"
      type: "object"
      required:
        - "work_item_count"
        - "total_ccr_hours"
        - "buffer_zone"
        - "position_info"
        - "throughput_metrics"
      title: "ScheduleAnalytics"
    "ScheduleCreate":
      properties:
        "organization_id":
          type: "string"
          title: "Organization Id"
          description: "Organization ID"
        "board_config_id":
          type: "string"
          title: "Board Config Id"
          description: "Board configuration ID"
        "work_item_ids":
          items:
            type: "string"
          type: "array"
          title: "Work Item Ids"
          description: "List of work item IDs"
        "timezone":
          type: "string"
          title: "Timezone"
          description: "Timezone for schedule dates"
          default: "UTC"
      type: "object"
      required:
        - "organization_id"
        - "board_config_id"
        - "work_item_ids"
      title: "ScheduleCreate"
    "ScheduleResponse":
      properties:
        "id":
          type: "string"
          title: "Id"
        "organization_id":
          type: "string"
          title: "Organization Id"
        "board_config_id":
          type: "string"
          title: "Board Config Id"
        "capability_channel_id":
          type: "string"
          title: "Capability Channel Id"
        "status":
          type: "string"
          title: "Status"
        "work_item_ids":
          items:
            type: "string"
          type: "array"
          title: "Work Item Ids"
        "time_unit_position":
          type: "integer"
          title: "Time Unit Position"
        "total_ccr_time":
          type: "number"
          title: "Total Ccr Time"
        "timezone":
          type: "string"
          title: "Timezone"
        "created_date":
          type: "string"
          title: "Created Date"
        "released_date":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Released Date"
        "completion_date":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Completion Date"
      type: "object"
      required:
        - "id"
        - "organization_id"
        - "board_config_id"
        - "capability_channel_id"
        - "status"
        - "work_item_ids"
        - "time_unit_position"
        - "total_ccr_time"
        - "timezone"
        - "created_date"
        - "released_date"
        - "completion_date"
      title: "ScheduleResponse"
    "ScheduleUpdate":
      properties:
        "status":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Status"
          description: "Schedule status"
        "work_item_ids":
          anyOf:
            - items:
                type: "string"
              type: "array"
            - type: "null"
          title: "Work Item Ids"
          description: "Updated work item IDs"
        "time_unit_position":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Time Unit Position"
          description: "Time unit position"
        "released_date":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Released Date"
          description: "Released date"
        "completion_date":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Completion Date"
          description: "Completion date"
      type: "object"
      title: "ScheduleUpdate"
    "TaskCreate":
      properties:
        "title":
          type: "string"
          title: "Title"
          description: "Task title"
        "completed":
          type: "boolean"
          title: "Completed"
          description: "Task completion status"
          default: false
      type: "object"
      required:
        - "title"
      title: "TaskCreate"
    "TaskResponse":
      properties:
        "id":
          type: "integer"
          title: "Id"
        "title":
          type: "string"
          title: "Title"
        "completed":
          type: "boolean"
          title: "Completed"
      type: "object"
      required:
        - "id"
        - "title"
        - "completed"
      title: "TaskResponse"
    "TaskUpdate":
      properties:
        "title":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Title"
          description: "Task title"
        "completed":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Completed"
          description: "Task completion status"
      type: "object"
      title: "TaskUpdate"
    "UserInfo":
      properties:
        "id":
          type: "string"
          title: "Id"
        "username":
          type: "string"
          title: "Username"
        "email":
          type: "string"
          title: "Email"
        "display_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Display Name"
        "active_status":
          type: "boolean"
          title: "Active Status"
      type: "object"
      required:
        - "id"
        - "username"
        - "email"
        - "display_name"
        - "active_status"
      title: "UserInfo"
      description: "User information model"
    "ValidationError":
      properties:
        "loc":
          items:
            anyOf:
              - type: "string"
              - type: "integer"
          type: "array"
          title: "Location"
        "msg":
          type: "string"
          title: "Message"
        "type":
          type: "string"
          title: "Error Type"
      type: "object"
      required:
        - "loc"
        - "msg"
        - "type"
      title: "ValidationError"
    "WorkItemCreate":
      properties:
        "organization_id":
          type: "string"
          title: "Organization Id"
          description: "Organization ID"
        "collection_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Collection Id"
          description: "Collection ID (optional)"
        "title":
          type: "string"
          title: "Title"
          description: "Work item title"
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "Work item description"
        "status":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Status"
          description: "Work item status"
          default: "Backlog"
        "priority":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Priority"
          description: "Work item priority"
          default: "medium"
        "estimated_total_hours":
          type: "number"
          title: "Estimated Total Hours"
          description: "Estimated total hours"
        "ccr_hours_required":
          anyOf:
            - additionalProperties:
                type: "number"
              type: "object"
            - type: "null"
          title: "Ccr Hours Required"
          description: "CCR hours required"
        "estimated_sales_price":
          anyOf:
            - type: "number"
            - type: "null"
          title: "Estimated Sales Price"
          description: "Estimated sales price"
          default: 0
        "estimated_variable_cost":
          anyOf:
            - type: "number"
            - type: "null"
          title: "Estimated Variable Cost"
          description: "Estimated variable cost"
          default: 0
        "tasks":
          anyOf:
            - items: {"$ref": "#/components/schemas/TaskCreate"}
              type: "array"
            - type: "null"
          title: "Tasks"
          description: "Initial tasks"
        "responsible_user_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Responsible User Id"
          description: "Responsible user ID"
        "url":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Url"
          description: "External URL"
      type: "object"
      required:
        - "organization_id"
        - "title"
        - "estimated_total_hours"
      title: "WorkItemCreate"
    "WorkItemResponse":
      properties:
        "id":
          type: "string"
          title: "Id"
        "organization_id":
          type: "string"
          title: "Organization Id"
        "collection_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Collection Id"
        "title":
          type: "string"
          title: "Title"
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
        "status":
          type: "string"
          title: "Status"
        "priority":
          type: "string"
          title: "Priority"
        "estimated_total_hours":
          type: "number"
          title: "Estimated Total Hours"
        "ccr_hours_required":
          anyOf:
            - additionalProperties:
                type: "number"
              type: "object"
            - type: "null"
          title: "Ccr Hours Required"
        "estimated_sales_price":
          anyOf:
            - type: "number"
            - type: "null"
          title: "Estimated Sales Price"
        "estimated_variable_cost":
          anyOf:
            - type: "number"
            - type: "null"
          title: "Estimated Variable Cost"
        "throughput":
          type: "number"
          title: "Throughput"
        "tasks":
          items: {"$ref": "#/components/schemas/TaskResponse"}
          type: "array"
          title: "Tasks"
        "progress_percentage":
          type: "number"
          title: "Progress Percentage"
        "responsible_user_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Responsible User Id"
        "url":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Url"
        "created_date":
          type: "string"
          title: "Created Date"
        "updated_date":
          type: "string"
          title: "Updated Date"
      type: "object"
      required:
        - "id"
        - "organization_id"
        - "collection_id"
        - "title"
        - "description"
        - "status"
        - "priority"
        - "estimated_total_hours"
        - "ccr_hours_required"
        - "estimated_sales_price"
        - "estimated_variable_cost"
        - "throughput"
        - "tasks"
        - "progress_percentage"
        - "responsible_user_id"
        - "url"
        - "created_date"
        - "updated_date"
      title: "WorkItemResponse"
    "WorkItemUpdate":
      properties:
        "collection_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Collection Id"
          description: "Collection ID"
        "title":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Title"
          description: "Work item title"
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "Work item description"
        "status":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Status"
          description: "Work item status"
        "priority":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Priority"
          description: "Work item priority"
        "estimated_total_hours":
          anyOf:
            - type: "number"
            - type: "null"
          title: "Estimated Total Hours"
          description: "Estimated total hours"
        "ccr_hours_required":
          anyOf:
            - additionalProperties:
                type: "number"
              type: "object"
            - type: "null"
          title: "Ccr Hours Required"
          description: "CCR hours required"
        "estimated_sales_price":
          anyOf:
            - type: "number"
            - type: "null"
          title: "Estimated Sales Price"
          description: "Estimated sales price"
        "estimated_variable_cost":
          anyOf:
            - type: "number"
            - type: "null"
          title: "Estimated Variable Cost"
          description: "Estimated variable cost"
        "tasks":
          anyOf:
            - items:
                additionalProperties: true
                type: "object"
              type: "array"
            - type: "null"
          title: "Tasks"
          description: "Tasks list"
        "responsible_user_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Responsible User Id"
          description: "Responsible user ID"
        "url":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Url"
          description: "External URL"
      type: "object"
      title: "WorkItemUpdate"
    BadRequest:
      type: object
      x-speakeasy-suggested-error: true
      properties:
        message:
          type: string
      additionalProperties: true
    Unauthorized:
      type: object
      x-speakeasy-suggested-error: true
      properties:
        message:
          type: string
      additionalProperties: true
    NotFound:
      type: object
      x-speakeasy-suggested-error: true
      properties:
        message:
          type: string
      additionalProperties: true
    RateLimited:
      type: object
      x-speakeasy-suggested-error: true
      properties:
        message:
          type: string
      additionalProperties: true
  securitySchemes:
    "HTTPBearer":
      type: "http"
      scheme: "bearer"
  responses:
    BadRequest:
      description: Invalid request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequest'
    Unauthorized:
      description: Permission denied or not authenticated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Unauthorized'
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFound'
    RateLimited:
      description: Rate limit exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RateLimited'
x-speakeasy-retries: {"strategy": "backoff", "backoff": {"initialInterval": 500, "maxInterval": 60000, "maxElapsedTime": 3600000, "exponent": 1.5}, "statusCodes": ["5XX"], "retryConnectionErrors": true}
