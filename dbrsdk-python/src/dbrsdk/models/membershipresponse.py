"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .dbr_api_memberships_userinfo import (
    DbrAPIMembershipsUserInfo,
    DbrAPIMembershipsUserInfoTypedDict,
)
from .roleinfo import RoleInfo, RoleInfoTypedDict
from dbrsdk.types import BaseModel, Nullable, UNSET_SENTINEL
from pydantic import model_serializer
from typing_extensions import TypedDict


class MembershipResponseTypedDict(TypedDict):
    r"""Schema for membership response"""

    id: str
    organization_id: str
    user_id: str
    role_id: str
    invitation_status: str
    invited_by_user_id: str
    joined_date: Nullable[str]
    created_date: str
    updated_date: str
    user: DbrAPIMembershipsUserInfoTypedDict
    r"""Schema for user information in membership response"""
    role: RoleInfoTypedDict
    r"""Schema for role information in membership response"""


class MembershipResponse(BaseModel):
    r"""Schema for membership response"""

    id: str

    organization_id: str

    user_id: str

    role_id: str

    invitation_status: str

    invited_by_user_id: str

    joined_date: Nullable[str]

    created_date: str

    updated_date: str

    user: DbrAPIMembershipsUserInfo
    r"""Schema for user information in membership response"""

    role: RoleInfo
    r"""Schema for role information in membership response"""

    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = []
        nullable_fields = ["joined_date"]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in type(self).model_fields.items():
            k = f.alias or n
            val = serialized.get(k)
            serialized.pop(k, None)

            optional_nullable = k in optional_fields and k in nullable_fields
            is_set = (
                self.__pydantic_fields_set__.intersection({n})
                or k in null_default_fields
            )  # pylint: disable=no-member

            if val is not None and val != UNSET_SENTINEL:
                m[k] = val
            elif val != UNSET_SENTINEL and (
                not k in optional_fields or (optional_nullable and is_set)
            ):
                m[k] = val

        return m
